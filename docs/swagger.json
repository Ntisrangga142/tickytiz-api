{
    "swagger": "2.0",
    "info": {
        "description": "API untuk sistem tiket bioskop",
        "title": "Tickytiz API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/admin/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve detailed information of a movie by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get movie by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminMovieResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/movies": {
            "post": {
                "description": "Insert movie with poster, backdrop, genres, actors, schedule",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Insert movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Release date yyyy-mm-dd",
                        "name": "release_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Duration in minutes",
                        "name": "duration",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Director name",
                        "name": "director_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Poster image",
                        "name": "poster",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Backdrop image",
                        "name": "backdrop",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma separated genres",
                        "name": "genres",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma separated actor names",
                        "name": "cast_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma separated locations",
                        "name": "location",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma separated datetimes (yyyy-mm-ddTHH:MM)",
                        "name": "date_time",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminMovie"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update movie details, including poster and backdrop images",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Movie title",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Poster image",
                        "name": "poster",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Backdrop image",
                        "name": "backdrop",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Release date in YYYY-MM-DD format",
                        "name": "release_date",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Duration in minutes",
                        "name": "duration",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Movie synopsis",
                        "name": "synopsis",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Movie rating",
                        "name": "rating",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Director ID",
                        "name": "id_director",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminMovieUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Soft-delete a movie by ID (sets delete_at timestamp)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AdminMovieDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth": {
            "post": {
                "description": "Login dengan Email dan Password untuk mendapatkan JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register Akun Baru",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "Register request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/genres": {
            "get": {
                "description": "Get all movie genres",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genres"
                ],
                "summary": "Get list of genres",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenreResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve movies filtered by title, genres, and page number (supports Redis caching)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get filtered movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by movie title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by genres, comma-separated",
                        "name": "genres",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseMovies"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/popular": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of popular movies (cached in Redis for 10 minutes)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get popular movies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseMovies"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/upcoming": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of upcoming movies (cached in Redis for 10 minutes)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get upcoming movies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseMovies"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve detailed information for a single movie by ID (cached in Redis for 10 minutes)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get movie details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseMovieDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new order with seats and associate it with the logged-in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOrders"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedule/seat/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all sold seats for a specific schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get sold seats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSeats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schedule/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all schedules for a specific movie by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get movie schedules",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSchedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mengambil data profil user yang sedang login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseUserProfile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mengupdate profil user termasuk upload profile image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Profile Image",
                        "name": "profileimg",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "First Name",
                        "name": "firstname",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Last Name",
                        "name": "lastname",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseUpdateProfile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/history": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mengambil riwayat order user yang sedang login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get order history",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOrderHistory"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AdminDelete": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "Movie successfully deleted"
                }
            }
        },
        "models.AdminMovie": {
            "type": "object",
            "properties": {
                "backdrop": {
                    "type": "string",
                    "example": "https://image.example.com/backdrops/avengers_endgame.jpg"
                },
                "casts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"Robert Downey Jr.\"",
                        " \"Chris Evans\"",
                        " \"Mark Ruffalo\"",
                        " \"Chris Hemsworth\"]"
                    ]
                },
                "director": {
                    "type": "string",
                    "example": "Anthony Russo, Joe Russo"
                },
                "duration": {
                    "type": "integer",
                    "example": 181
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"Action\"",
                        " \"Adventure\"",
                        " \"Sci-Fi\"]"
                    ]
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "poster": {
                    "type": "string",
                    "example": "https://image.example.com/posters/avengers_endgame.jpg"
                },
                "rating": {
                    "type": "number",
                    "example": 8.4
                },
                "release_date": {
                    "type": "string",
                    "example": "2019-04-26T00:00:00Z"
                },
                "synopsis": {
                    "type": "string",
                    "example": "Setelah pertempuran melawan Thanos, para Avengers bersatu untuk mengembalikan keseimbangan di alam semesta."
                },
                "title": {
                    "type": "string",
                    "example": "Avengers: Endgame"
                }
            }
        },
        "models.AdminMovieDeleteResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.AdminDelete"
                },
                "message": {
                    "type": "string",
                    "example": "Movie fetched successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.AdminMovieResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.AdminMovie"
                },
                "message": {
                    "type": "string",
                    "example": "Movie fetched successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.AdminMovieUpdateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.AdminUpdate"
                },
                "message": {
                    "type": "string",
                    "example": "Movie fetched successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.AdminUpdate": {
            "type": "object",
            "properties": {
                "backdrop": {
                    "type": "string",
                    "example": "https://image.example.com/backdrops/avengers_endgame_cut.jpg"
                },
                "duration": {
                    "type": "integer",
                    "example": 183
                },
                "id_director": {
                    "type": "integer",
                    "example": 12
                },
                "poster": {
                    "type": "string",
                    "example": "https://image.example.com/posters/avengers_endgame_cut.jpg"
                },
                "rating": {
                    "type": "number",
                    "example": 8.5
                },
                "release_date": {
                    "type": "string",
                    "example": "2019-05-01T00:00:00Z"
                },
                "synopsis": {
                    "type": "string",
                    "example": "Versi director's cut dari Avengers: Endgame."
                },
                "title": {
                    "type": "string",
                    "example": "Avengers: Endgame - Director's Cut"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error Message"
                },
                "status": {
                    "type": "string",
                    "example": "HTTP Status Error"
                },
                "status_code": {
                    "type": "integer",
                    "example": 400
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.Genre": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.GenreResponse": {
            "type": "object",
            "properties": {
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Genre"
                    }
                }
            }
        },
        "models.LoginDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "token"
                },
                "message": {
                    "type": "string",
                    "example": "Login successful"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Movie": {
            "type": "object",
            "properties": {
                "backdrop": {
                    "type": "string",
                    "example": "inception_backdrop.jpg"
                },
                "duration": {
                    "type": "integer",
                    "example": 148
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Action",
                        "Sci-Fi",
                        "Thriller"
                    ]
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "poster": {
                    "type": "string",
                    "example": "inception.jpg"
                },
                "rating": {
                    "type": "number",
                    "example": 8.8
                },
                "release_date": {
                    "type": "string",
                    "example": "2010-07-16"
                },
                "synopsis": {
                    "type": "string",
                    "example": "A thief who enters the dreams of others to steal secrets must pull off the ultimate heist."
                },
                "title": {
                    "type": "string",
                    "example": "Inception"
                }
            }
        },
        "models.MovieDetail": {
            "type": "object",
            "properties": {
                "backdrop": {
                    "type": "string",
                    "example": "inception_backdrop.jpg"
                },
                "casts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Leonardo DiCaprio",
                        " Joseph Gordon-Levitt",
                        " Ellen Page"
                    ]
                },
                "director": {
                    "type": "string",
                    "example": "Christopher Nolan"
                },
                "duration": {
                    "type": "integer",
                    "example": 148
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Action",
                        "Sci-Fi",
                        "Thriller"
                    ]
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "poster": {
                    "type": "string",
                    "example": "inception.jpg"
                },
                "rating": {
                    "type": "number",
                    "example": 8.8
                },
                "release_date": {
                    "type": "string",
                    "example": "2010-07-16T00:00:00Z"
                },
                "synopsis": {
                    "type": "string",
                    "example": "A thief who enters the dreams of others to steal secrets must pull off the ultimate heist."
                },
                "title": {
                    "type": "string",
                    "example": "Inception"
                }
            }
        },
        "models.OrderHistory": {
            "type": "object",
            "properties": {
                "cinema_name": {
                    "type": "string",
                    "example": "XXI Plaza Indonesia"
                },
                "duration": {
                    "type": "integer",
                    "example": 180
                },
                "ispaid": {
                    "type": "boolean",
                    "example": true
                },
                "location_name": {
                    "type": "string",
                    "example": "Jakarta"
                },
                "movie_backdrop": {
                    "type": "string",
                    "example": "https://example.com/backdrops/avengers-bg.jpg"
                },
                "movie_poster": {
                    "type": "string",
                    "example": "https://example.com/posters/avengers.jpg"
                },
                "movie_title": {
                    "type": "string",
                    "example": "Avengers: Endgame"
                },
                "order_email": {
                    "type": "string",
                    "example": "rangga@example.com"
                },
                "order_id": {
                    "type": "integer",
                    "example": 501
                },
                "order_name": {
                    "type": "string",
                    "example": "Rangga Saputra"
                },
                "order_phone": {
                    "type": "string",
                    "example": "+628123456789"
                },
                "payment_method": {
                    "type": "string",
                    "example": "Credit Card"
                },
                "qrcode": {
                    "type": "string",
                    "example": "https://example.com/qrcode/501.png"
                },
                "rating": {
                    "type": "number",
                    "example": 8.5
                },
                "seats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"A1\"",
                        "\"A2\"",
                        "\"A3\"]"
                    ]
                },
                "show_date": {
                    "type": "string",
                    "example": "2025-09-20T19:30:00Z"
                },
                "show_time": {
                    "type": "string",
                    "example": "19:30"
                },
                "total_price": {
                    "type": "integer",
                    "example": 150000
                }
            }
        },
        "models.OrderRequest": {
            "type": "object",
            "required": [
                "email",
                "id_paymentmethod",
                "id_schedule",
                "name",
                "phone",
                "qrcode",
                "total_price"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id_paymentmethod": {
                    "type": "integer"
                },
                "id_schedule": {
                    "type": "integer"
                },
                "is_paid": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "qrcode": {
                    "type": "string"
                },
                "seat": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total_price": {
                    "type": "number"
                }
            }
        },
        "models.OrderResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "rangga@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 101
                },
                "name": {
                    "type": "string",
                    "example": "Rangga Saputra"
                },
                "phone": {
                    "type": "string",
                    "example": "+628123456789"
                },
                "qrcode": {
                    "type": "string",
                    "example": "https://example.com/qrcode/101.png"
                },
                "seat": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "A1",
                        "A2",
                        "A3"
                    ]
                }
            }
        },
        "models.RegisterDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Register successful"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "models.ResponseMovieDetail": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.MovieDetail"
                },
                "message": {
                    "type": "string",
                    "example": "Success Load Movies"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ResponseMovies": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Movie"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success Load Movies"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ResponseOrderHistory": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.OrderHistory"
                },
                "message": {
                    "type": "string",
                    "example": "Success Load Movies"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ResponseOrders": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.OrderResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Success Load Movies"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ResponseSchedule": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ScheduleResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Success Load Movies"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ResponseSeats": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.SeatResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Success Load Movies"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ResponseUpdateProfile": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.UpdateProfile"
                },
                "message": {
                    "type": "string",
                    "example": "Success Load Movies"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ResponseUserProfile": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.UserProfile"
                },
                "message": {
                    "type": "string",
                    "example": "Success Load Movies"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.Schedule": {
            "type": "object",
            "properties": {
                "cinema": {
                    "type": "string"
                },
                "cinema_img": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "show_time": {
                    "type": "string"
                }
            }
        },
        "models.ScheduleResponse": {
            "type": "object",
            "properties": {
                "movie_id": {
                    "type": "integer",
                    "example": 101
                },
                "schedule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Schedule"
                    }
                }
            }
        },
        "models.SeatResponse": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "integer",
                    "example": 12
                },
                "seat_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "A1",
                        "A2",
                        "A3"
                    ]
                }
            }
        },
        "models.UpdateProfile": {
            "type": "object",
            "properties": {
                "firstname": {
                    "type": "string",
                    "example": "Rangga"
                },
                "lastname": {
                    "type": "string",
                    "example": "Saputra"
                },
                "phone": {
                    "type": "string",
                    "example": "+628123456789"
                },
                "profileimg": {
                    "description": "akan diisi path setelah upload file",
                    "type": "string",
                    "example": "https://example.com/uploads/profile_101.png"
                },
                "virtual_account": {
                    "type": "string",
                    "example": "1234567890123456"
                }
            }
        },
        "models.UserProfile": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "rangga@example.com"
                },
                "firstname": {
                    "type": "string",
                    "example": "Rangga"
                },
                "id": {
                    "type": "integer",
                    "example": 101
                },
                "lastname": {
                    "type": "string",
                    "example": "Saputra"
                },
                "phone": {
                    "type": "string",
                    "example": "+628123456789"
                },
                "point": {
                    "type": "integer",
                    "example": 250
                },
                "profileimg": {
                    "type": "string",
                    "example": "https://example.com/uploads/profile_101.png"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "virtual_account": {
                    "type": "string",
                    "example": "1234567890123456"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}